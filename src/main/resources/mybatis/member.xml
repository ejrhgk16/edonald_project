<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edonald.member.dao.MemberMapper">
	<insert id="joinMemberAddr">
		insert into user_address(user_email, d_key, postcode,
		road_address, jibun_address, detail_address, lat, lon)
		values(#{user_email}, #{d_key}, #{postcode}, #{road_address}, #{jibun_address}, #{detail_address}, #{lat}, #{lon})
	</insert>

	<insert id="joinMemberInfo">
	insert into user_info(user_email, user_password, user_name, user_gender, user_status, user_phone, oauth, role, sms_agree, terms_agree, user_regdate)
	values(#{user_email}, #{user_password}, #{user_name}, #{user_gender}, #{user_status}, #{user_phone}, #{oauth}, #{role}, #{sms_agree}, #{terms_agree}, sysdate())
	</insert>
	
	<select id="getMemberById" resultType="com.edonald.member.dto.MemberDto">
		select * from user_info where user_email = #{username} 
	</select>
	<select id="getAddress" resultType="com.edonald.member.dto.AddressDto">
		select * from user_address where user_email = #{username}
	</select>
	
	<update id="OauthNaver">
		update user_info set oauth=naver where user_email = #{user_email} 
	</update>
	
	<select id="getAddressBySeq" resultType="com.edonald.member.dto.AddressDto">
		select * from user_address where address_seq = #{address_seq}
	</select>
	
	<select id = "getNearStoreList" resultType="com.edonald.hadmin.dto.StoreDto">
		<![CDATA[ SELECT *  from store_list
		where ST_DISTANCE_SPHERE(POINT(#{lon}, #{lat}), POINT(store_log, store_lat)) < 3000
		ORDER BY ST_DISTANCE_SPHERE(POINT(#{lon}, #{lat}), POINT(store_log, store_lat))]]>
	</select>
	
	<select id="getOrderList" resultType="com.edonald.order.dto.OrderListDto">
	select * from order_list where user_email = #{user_email} order by order_seq desc
	</select>
	
	<!-- 유저 정보 변경 -->
	<update id="changeAccount">
		UPDATE user_info SET user_phone = #{user_phone}
		<if test="user_name != null">, user_name = #{user_name}</if>
		<if test="user_gender != null">, user_gender = #{user_gender} </if> 
		<if test="store_code != 0">, store_code = #{store_code} </if>
		<if test="user_password != null">, user_password = #{user_password} </if>
		WHERE user_email = #{user_email};
	</update>
	<update id="changePassword">
		UPDATE user_info SET user_password = #{user_password} WHERE user_email =#{user_email};
	</update>
	<select id="getEncodePassword" resultType="String">
		SELECT user_password FROM user_info WHERE user_email = #{user_email}
	</select>
	<update id="withdrawal">
		UPDATE user_info SET user_status = 0 WHERE user_email = #{user_email};
	</update>
	
	<!-- Hadmin 유저 관리 -->
	<select id="getMemberList" resultType="com.edonald.member.dto.MemberDto">
		SELECT u.*,s.store_name FROM user_info u LEFT JOIN store_list s ON u.store_code = s.store_code WHERE user_status = #{user_status} ORDER BY u.role ASC;
	</select>
	<update id="activityMemberControl">
		UPDATE user_info SET user_status = #{user_status} WHERE user_email = #{user_email}
	</update>
	

	<delete id="addrDel">
		delete from user_address where address_seq = #{address_seq}
	</delete>
	
	<update id="setDKeyInit">
		update user_address set d_key='n' where user_email = #{user_email}
	</update>
	
	<update id ="setDKey">
		update user_address set d_key='d' where address_seq = #{address_seq}
	</update>
	
	<!-- 인증관리 -->
	<select id="getCountAuthentication" resultType="int">
		SELECT count(*) FROM authentication_code WHERE type= #{type}
		<if test="user_email != null"> AND user_email = #{user_email}</if>
		<if test="code != 0"> AND code = #{code};</if>
		AND DATE_FORMAT( date, "%Y-%m-%d") = curdate()
	</select>
	<select id="getCountAuthenticationByEmail" resultType="int">
		SELECT count(*) FROM authentication_code WHERE user_email = #{user_email}
	</select>
	<insert id="insertAuthenticationCode">
		INSERT INTO authentication_code VALUES(${code},#{user_email},#{type},default)
	</insert>
	<select id="getAuthenticationCodeByCode" resultType="com.edonald.member.dto.AuthenticationCodeDto">
		SELECT * FROM authentication_code WHERE code = #{code} AND type = #{type}
	</select>
	<delete id="deleteAuthenticationRecord">
		DELETE FROM authentication_code WHERE user_email = #{user_email}
	</delete>
	
	<select id="checkEmail" resultType="com.edonald.member.dto.MemberDto">
		select * from user_info where user_email = #{user_email}
	</select>
</mapper>