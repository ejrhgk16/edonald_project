<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edonald.member.dao.MemberMapper">
	<insert id="joinMemberAddr">
		insert into user_address(user_email, d_key, postcode,
		road_address, jibun_address, detail_address, lat, lon)
		values(#{user_email}, #{d_key}, #{postcode}, #{road_address}, #{jibun_address}, #{detail_address}, #{lat}, #{lon})
	</insert>

	<insert id="joinMemberInfo">
	insert into user_info(user_email, user_password, user_name, user_gender, user_status, user_phone, oauth, role, sms_agree, terms_agree, user_regdate)
	values(#{user_email}, #{user_password}, #{user_name}, #{user_gender}, #{user_status}, #{user_phone}, #{oauth}, #{role}, #{sms_agree}, #{terms_agree}, sysdate())
	</insert>
	
	<select id="getMemberById" resultType="com.edonald.member.dto.MemberDto">
		select * from user_info where user_email = #{username}
	</select>
	<select id="getAddress" resultType="com.edonald.member.dto.AddressDto">
		select * from user_address where user_email = #{username}
	</select>
	
	<update id="OauthNaver">
		update user_info set oauth=naver where user_email = #{user_email} 
	</update>
	
	<select id="getAddressBySeq" resultType="com.edonald.member.dto.AddressDto">
		select * from user_address where address_seq = #{address_seq}
	</select>
	
	<select id = "getNearStoreList" resultType="com.edonald.hadmin.dto.StoreDto">
		<![CDATA[ SELECT *  from store_list
		where ST_DISTANCE_SPHERE(POINT(#{lon}, #{lat}), POINT(store_log, store_lat)) < 3000
		ORDER BY ST_DISTANCE_SPHERE(POINT(#{lon}, #{lat}), POINT(store_log, store_lat))]]>
	</select>
	
	<select id="getOrderList" resultType="com.edonald.order.dto.OrderListDto">
	select * from order_list where user_email = #{user_email} order by order_seq desc
	</select>
	
	<!-- 유저 정보 변경 -->
	<update id="changeAccount">
		UPDATE user_info SET user_name = #{user_name}, user_phone = #{user_phone} , user_gender = #{user_gender} 
		<if test="store_code != null">, store_code = #{store_code} </if>
		<if test="user_password != null">, user_password = #{user_password} </if>
		WHERE user_email = #{user_email};
	</update>
	<update id="changePassword">
		UPDATE user_info SET user_password = #{user_password} WHERE user_email =#{user_email};
	</update>
	<select id="getEncodePassword" resultType="String">
		SELECT user_password FROM user_info WHERE user_email = #{user_email}
	</select>

	<!-- Hadmin 유저 관리 -->
	<select id="getMemberList" resultType="com.edonald.member.dto.MemberDto">
		SELECT u.*,s.store_name FROM user_info u LEFT JOIN store_list s ON u.store_code = s.store_code WHERE user_status = #{user_status} ORDER BY u.role ASC;
	</select>
	<update id="activityMemberControl">
		UPDATE user_info SET user_status = #{user_status} WHERE user_email = #{user_email}
	</update>
	
	
</mapper>